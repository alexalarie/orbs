#!/usr/bin/python
# *-* coding: utf-8 *-*
# Author: Thomas Martin <thomas.martin.1@ulaval.ca>
# File: dstack

#############################################
############ DSTACK script ##################
#############################################

# This script helps the user to stack a set of frames in a cube. A
# list of frames path must be given. List files created by ORBS can be
# used. Custom lists can be created using the command:
# 'ls /path/to/file/*.fits > list'


import sys, os
import numpy as np

# Defining the path to ORBS module from script location
script_path = os.path.dirname(os.path.realpath(__file__)).split()
orbs_path = os.path.normpath(('%s'%os.sep).join(str(script_path[0]).split(os.sep)[:-1]))
sys.path.append(orbs_path)
    
from orbs.core import Tools, Cube

def usage(): 
    print """usage: dstack LIST_OF_FITS CUBE_NAME
    
    Convert a list of fits frames in a cube.
    Frames must have the same shape."""
  
    sys.exit(2)

def main():

    if len(sys.argv) < 3: usage()

    list_of_fits_path = sys.argv[1]
    cube_name = sys.argv[2]
    if os.path.exists(list_of_fits_path):
        cube = Cube(list_of_fits_path, no_log=True)
        data = cube._get_all_data()
        cube.write_fits(cube_name, data)
    else:
        print "The list file does not exist"
       
if __name__ == "__main__":
    main()
