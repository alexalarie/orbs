#!/usr/bin/python
# *-* coding: utf-8 *-*
# Author: Thomas Martin <thomas.martin.1@ulaval.ca>
# File: dstack

#############################################
############ DSTACK script ##################
#############################################

# This script helps the user to stack a set of frames in a cube. A
# list of frames path must be given. List files created by ORBS can be
# used. Custom lists can be created using the command:
# 'ls /path/to/file/*.fits > list'


import sys, os
import numpy as np

# Defining the path to ORBS module from script location
script_path = os.path.dirname(os.path.realpath(__file__)).split()
orbs_path = os.path.normpath(('%s'%os.sep).join(str(script_path[0]).split(os.sep)[:-1]))
sys.path.append(orbs_path)
    
from orbs.core import Tools

def usage(): 
    print """usage: rollxz CUBE_NAME
    
    Roll axes of a cube in order to have frames along XZ. Y being the
    third axis"""
  
    sys.exit(2)

def main():

    if len(sys.argv) < 2: usage()

    cube_name = sys.argv[1]
    if os.path.exists(cube_name):
        data = Tools().read_fits(cube_name)
        data = np.rollaxis(data, 2, 1)
        Tools().write_fits(os.path.splitext(cube_name)[0] + '.xz.fits', data,
                           silent=True)
    else:
        print "File does not exist"
       
if __name__ == "__main__":
    main()
